{"version":3,"sources":["utils/namesSortLink.js","utils/dobSortLink.js","components/table/tablehead.js","components/table/tableRow.js","components/table/tablebody.js","utils/Api.js","utils/compareNames.js","utils/compareDOB.js","utils/nameFilterInput.js","App.js","reportWebVitals.js","index.js"],"names":["NameSortLink","props","href","onClick","toggleSortDirection","DOBSortLink","toggleSortDirectionDate","TableHead","TableRow","alt","employeeRecord","name","first","src","picture","medium","last","phone","email","dob","age","TableBody","className","id","results","map","value","axios","get","compareNames","direction","employeeRecord1","employeeRecord2","name1","name2","result","compareDOB","age1","age2","NameFilterInput","htmlFor","type","filterState","onChange","onFilterChange","EmployeeResults","state","filteredEmployees","sortedEmployees","sortDirection","componentDidMount","retrieveEmployeeData","filteredRecords","filter","startsWith","setState","filteredEmployeesCopy","sort","event","target","preventDefault","stopPropagation","API","then","res","data","catch","err","console","log","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ab82b68.chunk.js","sourcesContent":["import React from \"react\";\r\nfunction NameSortLink(props) {\r\n    return <a href=\"#\" onClick={props.toggleSortDirection}>Full Name</a>;\r\n}\r\nexport default NameSortLink;","import React from \"react\";\r\nfunction DOBSortLink(props) {\r\n    return <a href=\"#\" onClick={props.toggleSortDirectionDate}>Age</a>;\r\n}\r\nexport default DOBSortLink;","import React from 'react';\r\nimport NameSortLink from '../../utils/namesSortLink';\r\nimport DOBSortLink from '../../utils/dobSortLink';\r\n\r\nfunction TableHead(props) {\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                <th>Photo</th>\r\n                <th><NameSortLink toggleSortDirection={props.toggleSortDirection} /></th>\r\n                <th>Phone</th>\r\n                <th>Email</th>\r\n                <th><DOBSortLink toggleSortDirectionDate={props.toggleSortDirectionDate} /></th>\r\n            </tr>\r\n        </thead>\r\n    );\r\n}\r\n\r\nexport default TableHead;","import React from \"react\";\r\nfunction TableRow(props) {\r\n    return (\r\n        <tr>\r\n            <td><img alt={props.employeeRecord.name.first} src={ props.employeeRecord.picture.medium}></img></td>\r\n            <td>{props.employeeRecord.name.first} {props.employeeRecord.name.last}</td>\r\n            <td>{props.employeeRecord.phone}</td>\r\n            <td>{props.employeeRecord.email}</td>\r\n            <td>{props.employeeRecord.dob.age}</td>\r\n        </tr>\r\n    );\r\n}\r\nexport default TableRow;","import React from 'react';\r\nimport TableHead from './tablehead';\r\nimport TableRow from './tableRow';\r\nimport './table.css';\r\n\r\nfunction TableBody(props) {\r\n\r\n    return (\r\n        <div className=\"test\">\r\n            <table id=\"employees\">\r\n                <TableHead toggleSortDirection={props.toggleSortDirection}/>\r\n                <tbody>\r\n                    {\r\n                        props.results.map(employeeRecord =>\r\n                            (<TableRow\r\n                                employeeRecord={employeeRecord}\r\n                                key={employeeRecord.id.value} />))\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableBody;","import axios from \"axios\";\r\n\r\nconst BASEURL = \"https://randomuser.me/api/?results=200&nat=us\";\r\n\r\nexport default {\r\n  search: function() {\r\n    return axios.get(BASEURL);\r\n  }\r\n};","function compareNames(direction = 1) {\r\n    return function (employeeRecord1, employeeRecord2) {\r\n        const name1 = `${employeeRecord1.name.first} ${employeeRecord1.name.last}`\r\n        const name2 = `${employeeRecord2.name.first} ${employeeRecord2.name.last}`\r\n        let result = 0;\r\n        if(name1 > name2) {\r\n            result = 1;\r\n        } else if (name1 < name2) {\r\n            result = -1;\r\n        }\r\n        return result * direction;\r\n    }\r\n}\r\nexport default compareNames;","function compareDOB(direction = 1) {\r\n    return function (employeeRecord1, employeeRecord2) {\r\n        const age1 = `${employeeRecord1.dob.age}`\r\n        const age2 = `${employeeRecord2.dob.age}`\r\n        let result = 0;\r\n        if(age1 > age2) {\r\n            result = 1;\r\n        } else if (age1 < age2) {\r\n            result = -1;\r\n        }\r\n        return result * direction;\r\n    }\r\n}\r\nexport default compareDOB;","import React from \"react\";\r\nfunction NameFilterInput(props) {\r\n    return (\r\n        <div>\r\n            <label htmlFor=\"filter-input\">Filter By Name: </label>\r\n            <input \r\n            type=\"text\"\r\n            value={props.filterState}\r\n            onChange={props.onFilterChange}\r\n            name=\"filterInput\"\r\n            id=\"filter-input\" />\r\n        </div>\r\n    )\r\n}\r\nexport default NameFilterInput;","import React, { Component } from 'react';\nimport TableBody from '../src/components/table/tablebody';\nimport API from \"./utils/Api\";\nimport compareNames from './utils/compareNames';\nimport compareDOB from './utils/compareDOB';\nimport NameFilterInput from './utils/nameFilterInput';\nimport './App.css';\n\nclass EmployeeResults extends Component {\n\n  state = {\n    results: [],\n    filteredEmployees: this.results,\n    sortedEmployees: this.filteredEmployees,\n    filterState: \"\",\n    sortDirection: 1\n  };\n\n\n  retrieveEmployeeData() {\n    API.search()\n    .then(res => this.setState({ results: res.data.results }))\n    .catch(err => console.log(err));\n  }\n\n  componentDidMount = () => {\n\n    this.retrieveEmployeeData();\n\n    let filteredRecords = this.state.results;\n    if (this.state.filterState !== '') {\n      filteredRecords = this.state.results.filter(employeeRecord => {\n        return employeeRecord.name.first.startsWith(this.state.filterState)\n        || employeeRecord.name.last.startsWith(this.state.filterState);\n      })\n    }\n    \n    this.setState({ filteredEmployees: filteredRecords });\n\n    const filteredEmployeesCopy = this.state.results;\n    filteredEmployeesCopy.sort(compareNames(this.state.sortDirection));\n    this.setState({ sortedEmployees: filteredEmployeesCopy });\n  }\n  \n  onFilterChange = (event) => {\n    const { value } = event.target;\n    this.setState({\n      filterState: value\n    });\n  }\n\n  toggleSortDirection = (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      const filteredEmployeesCopy = this.state.results;\n      filteredEmployeesCopy.sort(compareNames(this.state.sortDirection));\n      this.setState({\n        sortDirection: -1 * this.state.sortDirection\n      });\n  }\n  \n  toggleSortDirectionDate = (event) => {\n      event.preventDefault();\n      event.stopPropagation();\n      const filteredEmployeesCopy = this.state.results;\n      filteredEmployeesCopy.sort(compareDOB(this.state.sortDirection));\n      this.setState({\n        sortDirection: -1 * this.state.sortDirection\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n            React Employee Directory\n          </p>\n          <p className=\"App-link\">\n            Employee management at your finger tips\n          </p>\n          <NameFilterInput\n            filterState={this.state.filterState}\n            onFilterChange={this.onFilterChange}\n          />\n        </header>\n        <div className=\"test\">\n          <section className=\"TableSection\">\n            <TableBody results={this.state.results} toggleSortDirectionDate={this.toggleSortDirectionDate} toggleSortDirection={this.toggleSortDirection}/>\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EmployeeResults;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}